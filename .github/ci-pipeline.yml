name: CI Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build
        run: echo "Building..."

  selenium-tests:
    runs-on: ubuntu-latest  # Using Ubuntu for better Chrome compatibility
    env:
      PETSTOREAPIKEY: ${{ secrets.PETSTOREAPIKEY }}  # Set your API key in GitHub secrets
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget curl unzip
          sudo apt-get install -y libxss1 libappindicator3-1 libindicator7
          sudo apt-get install -y google-chrome-stable

      - name: Install specific version of ChromeDriver (v132)
        run: |
          # Set the desired ChromeDriver version (v132)
          CHROME_DRIVER_VERSION="132.0.6834.110"
          echo "Using ChromeDriver version: $CHROME_DRIVER_VERSION"

          # Download the specific version of ChromeDriver          
          wget https://storage.googleapis.com/chrome-for-testing-public/$CHROME_DRIVER_VERSION/linux64/chromedriver-linux64.zip

          # Unzip the ChromeDriver package
          unzip chromedriver-linux64.zip
          
          # Move the extracted chromedriver binary to the appropriate location
          # bin/Debug/net8.0
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/ 
          
          # Clean up the downloaded zip file and extracted folder
          rm -rf chromedriver-linux64.zip chromedriver-linux64

      - name: Run Selenium tests
        run: |
          echo "Running Selenium tests..."
          dotnet test

  notify:
    runs-on: ubuntu-latest
    env:
      SLACKWEBHOOKURL: ${{ secrets.SLACKWEBHOOKURL }}  # Set your SLACKWEBHOOKURL in GitHub secrets
    needs: selenium-tests
    if: always()  # Ensure this job runs regardless of the result of selenium-tests
    steps:
      - name: Install dependencies for Slack notification
        run: |
          sudo apt-get update
          sudo apt-get install -y curl

      - name: Send Slack notification
        run: |
          if [ -z "$SLACKWEBHOOKURL " ]; then
            echo "Error: SLACKWEBHOOKURL is not set or empty."
            exit 1
          fi
          curl -X POST -H "Content-type: application/json" --data @./artifacts/payload.json "$SLACKWEBHOOKURL"